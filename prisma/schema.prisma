generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contact   Contact?
  ticket    Ticket[]
}

model Contact {
  id          Int      @id @default(autoincrement())
  phone       String
  email       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  customer_id Int      @unique
  customer    Customer @relation(fields: [customer_id], references: [id])
}

model Movie {
  id          Int         @id @default(autoincrement())
  title       String
  runtimeMins Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  screening   Screening[]
}

model Screening {
  id        Int      @id @default(autoincrement())
  startsAt  DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  movie_id  Int
  movie     Movie    @relation(fields: [movie_id], references: [id])
  screen_id Int
  screen    Screen   @relation(fields: [screen_id], references: [id])
  ticket    Ticket[]
}

model Screen {
  id        Int         @id @default(autoincrement())
  number    Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  screening Screening[]
}

model Ticket {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  screening Screening @relation(fields: [screeningId], references: [id])
  customer  Customer @relation(fields: [customerId], references: [id])
  customerId  Int
  screeningId Int
}
